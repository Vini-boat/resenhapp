// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resenhapp.Repositories.Data;

#nullable disable

namespace Resenhapp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231113232114_initial2")]
    partial class initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("AgregateFromAgregate", b =>
                {
                    b.Property<int>("AgregateFromID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgregateID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AgregateFromID", "AgregateID");

                    b.HasIndex("AgregateID");

                    b.ToTable("AgregateFromAgregate");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("SMALLDATETIME")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Paied")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<int?>("PartyId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Planned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PartyId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Confirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("Invited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<int?>("PartyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.HasIndex("PersonId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(140)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instagram")
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("PixKey")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AgregateFromAgregate", b =>
                {
                    b.HasOne("Resenhapp.Repositories.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("AgregateFromID")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("FK_AgregateFromRole_AgregateFromID");

                    b.HasOne("Resenhapp.Repositories.Models.Guest", null)
                        .WithMany()
                        .HasForeignKey("AgregateID")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("FK_AgregateFromAgregate_AgregateID");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Expense", b =>
                {
                    b.HasOne("Resenhapp.Repositories.Models.Person", "Owner")
                        .WithMany("Expenses")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Expense_Owner");

                    b.HasOne("Resenhapp.Repositories.Models.Party", "Party")
                        .WithMany("Expenses")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Expense_Party");

                    b.Navigation("Owner");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Guest", b =>
                {
                    b.HasOne("Resenhapp.Repositories.Models.Party", "Party")
                        .WithMany("Guests")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Guest_Party");

                    b.HasOne("Resenhapp.Repositories.Models.Person", "Person")
                        .WithMany("GuestIn")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_GuestIn_Person");

                    b.Navigation("Party");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Party", b =>
                {
                    b.HasOne("Resenhapp.Repositories.Models.User", "User")
                        .WithMany("Parties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Party_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Party", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Guests");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.Person", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("GuestIn");
                });

            modelBuilder.Entity("Resenhapp.Repositories.Models.User", b =>
                {
                    b.Navigation("Parties");
                });
#pragma warning restore 612, 618
        }
    }
}
